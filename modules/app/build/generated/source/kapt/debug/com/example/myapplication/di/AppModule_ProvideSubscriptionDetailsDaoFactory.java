// Generated by Dagger (https://dagger.dev).
package com.example.myapplication.di;

import com.example.myapplication.data.MyDatabase;
import com.example.myapplication.data.SubscriptionDetailsDao;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvideSubscriptionDetailsDaoFactory implements Factory<SubscriptionDetailsDao> {
  private final Provider<MyDatabase> dbProvider;

  public AppModule_ProvideSubscriptionDetailsDaoFactory(Provider<MyDatabase> dbProvider) {
    this.dbProvider = dbProvider;
  }

  @Override
  public SubscriptionDetailsDao get() {
    return provideSubscriptionDetailsDao(dbProvider.get());
  }

  public static AppModule_ProvideSubscriptionDetailsDaoFactory create(
      Provider<MyDatabase> dbProvider) {
    return new AppModule_ProvideSubscriptionDetailsDaoFactory(dbProvider);
  }

  public static SubscriptionDetailsDao provideSubscriptionDetailsDao(MyDatabase db) {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.provideSubscriptionDetailsDao(db));
  }
}
