// Generated by Dagger (https://dagger.dev).
package com.example.myapplication;

import com.example.myapplication.navigation.Navigator;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import dagger.internal.QualifierMetadata;
import javax.inject.Provider;

@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MainActivity_MembersInjector implements MembersInjector<MainActivity> {
  private final Provider<Navigator> navigatorProvider;

  public MainActivity_MembersInjector(Provider<Navigator> navigatorProvider) {
    this.navigatorProvider = navigatorProvider;
  }

  public static MembersInjector<MainActivity> create(Provider<Navigator> navigatorProvider) {
    return new MainActivity_MembersInjector(navigatorProvider);
  }

  @Override
  public void injectMembers(MainActivity instance) {
    injectNavigator(instance, navigatorProvider.get());
  }

  @InjectedFieldSignature("com.example.myapplication.MainActivity.navigator")
  public static void injectNavigator(MainActivity instance, Navigator navigator) {
    instance.navigator = navigator;
  }
}
