// Generated by Dagger (https://dagger.dev).
package com.example.myapplication.di;

import com.example.myapplication.data.SubRepository;
import com.example.myapplication.data.SubscriptionDao;
import com.example.myapplication.data.SubscriptionDetailsDao;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvidesSubRepositoryFactory implements Factory<SubRepository> {
  private final Provider<SubscriptionDao> subscriptionDaoProvider;

  private final Provider<SubscriptionDetailsDao> subscriptionDetailsDaoProvider;

  public AppModule_ProvidesSubRepositoryFactory(Provider<SubscriptionDao> subscriptionDaoProvider,
      Provider<SubscriptionDetailsDao> subscriptionDetailsDaoProvider) {
    this.subscriptionDaoProvider = subscriptionDaoProvider;
    this.subscriptionDetailsDaoProvider = subscriptionDetailsDaoProvider;
  }

  @Override
  public SubRepository get() {
    return providesSubRepository(subscriptionDaoProvider.get(), subscriptionDetailsDaoProvider.get());
  }

  public static AppModule_ProvidesSubRepositoryFactory create(
      Provider<SubscriptionDao> subscriptionDaoProvider,
      Provider<SubscriptionDetailsDao> subscriptionDetailsDaoProvider) {
    return new AppModule_ProvidesSubRepositoryFactory(subscriptionDaoProvider, subscriptionDetailsDaoProvider);
  }

  public static SubRepository providesSubRepository(SubscriptionDao subscriptionDao,
      SubscriptionDetailsDao subscriptionDetailsDao) {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.providesSubRepository(subscriptionDao, subscriptionDetailsDao));
  }
}
