// Generated by Dagger (https://dagger.dev).
package com.example.myapplication.viewModels;

import com.example.myapplication.data.SubRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SubViewModel_Factory implements Factory<SubViewModel> {
  private final Provider<SubRepository> repositoryProvider;

  public SubViewModel_Factory(Provider<SubRepository> repositoryProvider) {
    this.repositoryProvider = repositoryProvider;
  }

  @Override
  public SubViewModel get() {
    return newInstance(repositoryProvider.get());
  }

  public static SubViewModel_Factory create(Provider<SubRepository> repositoryProvider) {
    return new SubViewModel_Factory(repositoryProvider);
  }

  public static SubViewModel newInstance(SubRepository repository) {
    return new SubViewModel(repository);
  }
}
